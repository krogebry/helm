shared_cluster:
  domain: aws.infra.shared_cluster.mydomain.com
  # -- Cluster region
  region: us-east-1
  app_name: myapplication
  # -- Cluster Id
  cluster_id: cluster-0
  # -- Cluster name: [non-prod / prod]
  cluster_name: non-prod 

database:
  # -- Database name
  name: postgres
  # -- Port number
  port: 5432
  # -- Database hostname
  hostname: db.mydomain.com

services:
  grpc_services:
    - vcs-grpc-myapp
    # - visualizer-grpc

  #-- apc.arene.com
  short_names:
    - visualizer

  #-- api.apc.arene.com
  api_short_names:
    - vcs-myapp
    - vcs-grpc-myapp

  #-- Istio Virtual Service endpoints that should gated by default oauth
  oauth_blocked:
    - css
    - dcs
    - rts
    - vms
    - vss

  # These endpoints should return an oauth block, success means that oauth is blocking the request
  virtual_service_endpoint_names:
    - css
    - dcs
    - rts
    - vcs
    - vcs-grpc
    - vms
    - vss
    - visualizer

  # These endpoints will use MTF's default cert
  default_gateway_ivs:
    - css
    - dcs
    - rts
    - vms
    - vss

  custom_gateway_ivs:
    - visualizer
    - vcs-myapp
    - vcs-grpc-myapp


infra:
  env_name: dev

secretConfig: false

configExistingSecretName: ""

containerPort: 9115

replicaCount: 1

image:
  tag: latest
  repository: quay.io/prometheus/blackbox-exporter
  pullPolicy: IfNotPresent

#imagePullSecrets:
#  - name: ext-docker-regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  sidecar.istio.io/inject: "false"
  seccomp.security.alpha.kubernetes.io/pod: runtime/default
  # -- Annotation to disable Istio "Metrics merging" for istio-proxy sidecar
  prometheus.istio.io/merge-metrics: "true"
  # -- Annotations to enable  metrics collection
  prometheus.io/scrape: "true"
  prometheus.io/prefix: "app.woven.arene.apc.control-plane."
  prometheus.io/port: "8125"

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  privileged: false
  capabilities:
    drop:
      - all

service:
  type: ClusterIP
  port: 8125

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: "100m"
    memory: "1Gi"
  limits:
    cpu: "200m"
    memory: "2Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
