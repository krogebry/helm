# Default values for <CHARTNAME>
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

shared_cluster:
  # -- MTF cluster family: ["gc", "gpu"]
  cluster_family_name: gc
  # -- MTF cluster family ID: [0, 1]
  cluster_family_id: 0
  # -- MTF cluster: [aws, gke]
  cloud: aws
  # -- MTF domain
  domain: infra.mydomain.com
  # -- MTF region: [us-east-1, ap-northeast-1, us-central1]
  region: ap-northeast-1
  # -- MTF prod or non-prod: [apps-prod, apps]
  env_name: apps # apps or apps-prod
  # -- MTF application name
  app_name: my-app
  # -- MTF namespace name
  namespace_name: application-name-dev

database:
  # -- FQDN that lives in MTF wired up to the RDS instance via a private link.
  hostname: fqdn.amazonaws.com
  # -- Port number
  port: "5432"

replicaCount: 1

image:
  repository: docker.com/<CHARTNAME>
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 10000
  privileged: false
  capabilities:
    drop:
      - all

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: "200m"
    memory: "2000Mi"
  limits:
    cpu: "400m"
    memory: "4000Mi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
